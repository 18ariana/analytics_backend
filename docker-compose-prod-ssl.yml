version: '3'

services:
  db:
    container_name: analytics_db_prod
    image: postgres
    ports:
      - "6435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=poi987Qw
      - POSTGRES_DB=analytics_db
    volumes:
      - ./dbs/postgres-data-prod:/var/lib/postgresql
  backend:
    container_name: analytics_backend_prod
    build:
      context: ./application
      dockerfile: Dockerfile-prod
    command: bash -c "sleep 3 && python manage.py makemigrations && python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn analytics_project.wsgi -b 0.0.0.0:8001 --workers 2";
    volumes:
      - ./application:/application
    expose:
      - 8000
    restart: always
    links:
      - db
  nginx:
    image: nginx:alpine
    container_name: analytics_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./application/media:/backend/src/media
      - ./application/static-backend:/backend/src/static-backend
      - ./frontend/build:/frontend/src
      - ./nginx/ssl:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl:/var/lib/letsencrypt
    depends_on:
      - backend
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/ssl:/var/lib/letsencrypt
      # - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email antongovorov@gmail.com --agree-tos --no-eff-email --staging -d op.itmo.ru
volumes:
  postgres_data:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/user/analytics_backend/tests
      o: bind

networks:
  app-network:
    driver: bridge
